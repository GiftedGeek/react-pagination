{"version":3,"sources":["Pagination.jsx","App.jsx","index.js"],"names":["Pagination","props","state","pager","this","items","length","setPage","initialPage","prevProps","prevState","page","pageSize","totalPages","getPager","pageOfItems","slice","startIndex","endIndex","setState","onChangePage","totalItems","currentPage","startPage","endPage","Math","ceil","min","pages","Array","keys","map","i","className","onClick","index","key","React","Component","defaultProps","App","exampleItems","id","name","bind","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74856386.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css'\r\n\r\nconst propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    initialPage: PropTypes.number,\r\n    pageSize: PropTypes.number\r\n}\r\n\r\nconst defaultProps = {\r\n    initialPage: 1,\r\n    pageSize: 10\r\n}\r\n\r\nclass Pagination extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { pager: {} };\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.items && this.props.items.length) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.items !== prevProps.items) {\r\n            this.setPage(this.props.initialPage);\r\n        }\r\n    }\r\n\r\n    setPage(page) {\r\n        var { items, pageSize } = this.props;\r\n        var pager = this.state.pager;\r\n\r\n        if (page < 1 || page > pager.totalPages) {\r\n            return;\r\n        }\r\n\r\n        pager = this.getPager(items.length, page, pageSize);\r\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n        this.setState({ pager: pager });\r\n\r\n        this.props.onChangePage(pageOfItems);\r\n    }\r\n\r\n    getPager(totalItems, currentPage, pageSize) {\r\n        currentPage = currentPage || 1;\r\n        pageSize = pageSize || 10;\r\n        var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        var startPage, endPage;\r\n        if (totalPages <= 10) {\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        var startIndex = (currentPage - 1) * pageSize;\r\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n\r\n    render() {\r\n        var pager = this.state.pager;\r\n\r\n        if (!pager.pages || pager.pages.length <= 1) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"pagination\">\r\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(1)}>First</a>\r\n                </li>\r\n                <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\r\n                </li>\r\n                {pager.pages.map((page, index) =>\r\n                    <li key={index} className={pager.currentPage === page ? 'active' : ''}>\r\n                        <a onClick={() => this.setPage(page)}>{page}</a>\r\n                    </li>\r\n                )}\r\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\r\n                </li>\r\n                <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                    <a onClick={() => this.setPage(pager.totalPages)}>Last</a>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = propTypes;\r\nPagination.defaultProps = defaultProps;\r\nexport default Pagination;","import React from \"react\";\nimport Pagination from \"./Pagination\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    \n    var exampleItems = [...Array(100).keys()].map((i) => ({\n      id: i + 1,\n      name: \"Display Item \" + (i + 1),\n    }));\n\n    this.state = {\n      exampleItems: exampleItems,\n      pageOfItems: [],\n    };\n\n    this.onChangePage = this.onChangePage.bind(this);\n  }\n\n  onChangePage(pageOfItems) {\n    this.setState({ pageOfItems: pageOfItems });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"text-center\">\n            <h1>Pagination</h1>\n            {this.state.pageOfItems.map((item) => (\n              <div key={item.id}> {item.name} </div>\n            ))}\n            <Pagination\n              items={this.state.exampleItems}\n              onChangePage={this.onChangePage}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('app'));\n"],"sourceRoot":""}